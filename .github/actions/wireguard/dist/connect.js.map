{"version":3,"file":"connect.js","sources":["../src/connect.js"],"sourcesContent":["import * as core from \"@actions/core\";\nimport * as exec from \"@actions/exec\";\nimport * as io from \"@actions/io\";\nimport * as fs from \"fs\";\n\ntry {\n  const vpnConfig = core.getInput(\"vpn_config\");\n  core.info(`Wireguard config: ${vpnConfig}`);\n  const confDir = core.getInput(\"conf_dir\");\n  core.info(`Wireguard config directory: ${confDir}`);\n\n  core.info(`Installing wireguard`);\n  await exec.exec('sudo', ['apt-get', '-y',\n    '-qq', '-o', 'Dpkg::Progress-Fancy=\"0\"', '-o', 'APT::Color=\"0\"', '-o', 'Dpkg::Use-Pty=\"0\"',\n    'install', 'wireguard-tools']);\n  await io.mkdirP(confDir);\n  fs.writeFileSync(`${confDir}/wg0.conf`, vpnConfig, { mode: 0o600 });\n\n  core.info(`Connecting`);\n  await exec.exec('sudo', ['wg-quick', 'up', `${confDir}/wg0.conf`]);\n  core.info(`Connected`);\n} catch (error) {\n  core.setFailed(error.message);\n}\n"],"names":["core.getInput","core.info","exec.exec","io.mkdirP","fs","core.setFailed"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAI;AACJ,EAAE,MAAM,SAAS,GAAGA,oBAAa,CAAC,YAAY,CAAC;AAC/C,EAAEC,gBAAS,CAAC,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC,CAAC;AAC7C,EAAE,MAAM,OAAO,GAAGD,oBAAa,CAAC,UAAU,CAAC;AAC3C,EAAEC,gBAAS,CAAC,CAAC,4BAA4B,EAAE,OAAO,CAAC,CAAC,CAAC;;AAErD,EAAEA,gBAAS,CAAC,CAAC,oBAAoB,CAAC,CAAC;AACnC,EAAE,MAAMC,gBAAS,CAAC,MAAM,EAAE,CAAC,SAAS,EAAE,IAAI;AAC1C,IAAI,KAAK,EAAE,IAAI,EAAE,0BAA0B,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,mBAAmB;AAC9F,IAAI,SAAS,EAAE,iBAAiB,CAAC,CAAC;AAClC,EAAE,MAAMC,gBAAS,CAAC,OAAO,CAAC;AAC1B,EAAEC,UAAE,CAAC,aAAa,CAAC,CAAC,EAAE,OAAO,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;;AAErE,EAAEH,gBAAS,CAAC,CAAC,UAAU,CAAC,CAAC;AACzB,EAAE,MAAMC,gBAAS,CAAC,MAAM,EAAE,CAAC,UAAU,EAAE,IAAI,EAAE,CAAC,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;AACpE,EAAED,gBAAS,CAAC,CAAC,SAAS,CAAC,CAAC;AACxB,CAAC,CAAC,OAAO,KAAK,EAAE;AAChB,EAAEI,qBAAc,CAAC,KAAK,CAAC,OAAO,CAAC;AAC/B"}